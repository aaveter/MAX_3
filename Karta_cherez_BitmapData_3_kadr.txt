//Создаем карту
urlLoaderMap[i].data.position=0;
var map_size:int=urlLoaderMap[i].data.readInt();
var gor:int=new int  ;
var vert:int=new int  ;
var cell:Array=new Array  ;
var map:Sprite=new Sprite();
var map_units:Sprite=new Sprite  ;
var map_place:Sprite=new Sprite  ;

//Функция оптимизирующая затраты на графическую визуализацию
var gor_start:int=new int  ;
var vert_start:int=new int  ;
var gor_length:int=new int  ;
var vert_length:int=new int  ;
for (gor = 0; gor<map_size; gor++) {
	cell[gor]=new Array  ;
	for (vert = 0; vert<map_size; vert++) {
		cell[gor][vert] = new Array(
		"type",
		"optimize",
		"source_t",
		"source_n"
		);
		cell[gor][vert]["type"]=urlLoaderMap[i].data.readUTF();
		cell[gor][vert]["optimize"]=0;
	}
}
for (gor = 0; gor<map_size; gor++) {
	gor_start=gor;
	for (vert = 0; vert<map_size; vert++) {
		gor_length=1;
		vert_start=vert;
		vert_length=1;
		if (cell[gor][vert]["optimize"]!=1) {
			cell[gor][vert]["optimize"]=1;
			while (vert<map_size-1&&cell[gor][vert]["type"]==cell[gor][vert+1]["type"]&&cell[gor][vert+1]["optimize"]!=1) {
				vert_length+=1;
				vert+=1;
				cell[gor][vert]["optimize"]=1;
			}
			vert=vert_start;
			while (gor<map_size-1&&cell[gor][vert]["type"]==cell[gor+1][vert]["type"]&&vert_start+vert_length>vert) {
				vert+=1;
				if (vert_start+vert_length==vert) {
					gor_length+=1;
					gor+=1;
					for (vert = vert_start; vert_start+vert_length>vert; vert++) {
						cell[gor][vert]["optimize"]=1;
					}
					vert=vert_start;
				}
			}			
			if (cell[gor_start][vert_start]["type"]=="green") {
				map.graphics.beginBitmapFill(green_dark);
				map_units.graphics.beginBitmapFill(green);				
			} else if (cell[gor_start][vert_start]["type"]=="water") {
				map.graphics.beginBitmapFill(water_dark);
				map_units.graphics.beginBitmapFill(water);				
			} else if (cell[gor_start][vert_start]["type"]=="montain") {
				map.graphics.beginBitmapFill(montain_dark);
				map_units.graphics.beginBitmapFill(montain);				
			}			
			map.graphics.drawRect(gor_start*cell_pixels, vert_start*cell_pixels, cell_pixels*gor_length, cell_pixels*vert_length);
			map.graphics.endFill();
			map_units.graphics.drawRect(gor_start*cell_pixels, vert_start*cell_pixels, cell_pixels*gor_length, cell_pixels*vert_length);
			map_units.graphics.endFill();			
			vert=vert_start+vert_length-1;
			gor=gor_start;
		}
	}
}
addChild(map_place);
map_place.addChild(map);
map.addChild(map_units);
map_place.x=map_x;
map_place.scrollRect=map_rect;
//Конец создания карты

//Меняю курсор только для карты
var mc:Sprite=new cursor_class  ;
mc.mouseEnabled=false;
map_place.addEventListener(MouseEvent.MOUSE_OVER, cursor_add);
function cursor_add(event:MouseEvent) {
	Mouse.hide();
	addChild(mc);
	mc.x=event.stageX;
	mc.y=event.stageY;
	map_place.addEventListener(MouseEvent.MOUSE_MOVE, cursor_move);
	map_place.addEventListener(MouseEvent.MOUSE_OUT, cursor_del);
}
function cursor_move(event:MouseEvent) {
	mc.x=event.stageX;
	mc.y=event.stageY;
}
function cursor_del(event:MouseEvent) {
	Mouse.show();
	removeChild(mc);
	map_place.removeEventListener(MouseEvent.MOUSE_MOVE, cursor_move);
	map_place.removeEventListener(MouseEvent.MOUSE_OUT, cursor_del);
}